{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/geeshniramchurn/Downloads/Counter Redux-app/src/store/index.js"],"names":["createStore","initialState","counter","showCounter","counterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAAQA,WAAR,QAA2B,OAA3B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAEJ,YAAR,EAAsBK,MAAtB,KAAiC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFhB,KAAP;AAIH;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO;AACHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD7B;AAEHL,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFhB,KAAP;AAIH;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFhB,KAAP;AAIH;;AAED,MAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA6B;AACzB,WAAO;AACHJ,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF,WADjB;AAEHD,MAAAA,OAAO,EAAEG,KAAK,CAACH;AAFZ,KAAP;AAIH;;AAED,SAAOG,KAAP;AACH,CA5BD;;AA+BA,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import {createStore}  from 'redux';\n\nconst initialState = {counter: 0, showCounter: true};\n\nconst counterReducer = (state= initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle'){\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter,\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}