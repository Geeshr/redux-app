{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/geeshniramchurn/Downloads/Counter Redux-app/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"mappings":"AAAA,SAAQA,WAAR,QAA2B,OAA3B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAArB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAG,SADC;AAERH,EAAAA,YAFQ;AAGRI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHK;;AAINM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KANK;;AAONO,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACJ,WAAN,GAAoB,CAACI,KAAK,CAACJ,WAA3B;AACH;;AAZK;AAHF,CAAD,CAAX;;AAmBA,MAAMU,cAAc,GAAG,CAACN,KAAK,GAAEN,YAAR,EAAsBS,MAAtB,KAAiC;AACpD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFhB,KAAP;AAIH;;AACD,MAAIO,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC5B,WAAO;AACHZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBQ,MAAM,CAACC,MAD7B;AAEHR,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFhB,KAAP;AAIH;;AACD,MAAIO,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHZ,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFhB,KAAP;AAIH;;AAED,MAAIO,MAAM,CAACI,IAAP,KAAgB,QAApB,EAA6B;AACzB,WAAO;AACHX,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WADjB;AAEHD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAFZ,KAAP;AAIH;;AAED,SAAOK,KAAP;AACH,CA5BD;;AA+BA,MAAMQ,KAAK,GAAGhB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import {createStore}  from 'redux';\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {counter: 0, showCounter: true};\n\ncreateSlice({\n    name : 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.amount;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        },\n    }\n});\n\nconst counterReducer = (state= initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle'){\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter,\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}