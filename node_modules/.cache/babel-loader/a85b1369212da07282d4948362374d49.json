{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/geeshniramchurn/Downloads/Counter Redux-app/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,cAArB,QAA0C,kBAA1C;AAEA,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAG,SADsB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAE;AADI,CAAzB;AAIA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,gBADoB;AAE1BC,EAAAA,YAAY,EAAES,gBAFY;AAG1BR,EAAAA,QAAQ,EAAE;AACNW,IAAAA,KAAK,CAACT,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACH,KAHK;;AAING,IAAAA,MAAM,CAACV,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACH;;AANK;AAHgB,CAAD,CAA7B;AAcA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AACzBqB,EAAAA,OAAO,EAAEjB,YAAY,CAACiB;AADG,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGlB,YAAY,CAACmB,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import {createSlice, configureStore} from '@reduxjs/toolkit'\n\nconst initialCounterState = {counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n    name : 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        },\n    }\n});\n\nconst initialAuthState = {\n    isAuthenticated: false,\n};\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        },\n    }\n});\n\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}